// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "binary_threshold.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic binary_threshold::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic binary_threshold::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> binary_threshold::ap_ST_fsm_state1 = "1";
const sc_lv<4> binary_threshold::ap_ST_fsm_state2 = "10";
const sc_lv<4> binary_threshold::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> binary_threshold::ap_ST_fsm_state6 = "1000";
const bool binary_threshold::ap_const_boolean_1 = true;
const sc_lv<32> binary_threshold::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> binary_threshold::ap_const_lv32_2 = "10";
const bool binary_threshold::ap_const_boolean_0 = false;
const sc_lv<1> binary_threshold::ap_const_lv1_0 = "0";
const int binary_threshold::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> binary_threshold::ap_const_lv32_1 = "1";
const sc_lv<1> binary_threshold::ap_const_lv1_1 = "1";
const sc_lv<32> binary_threshold::ap_const_lv32_3 = "11";

binary_threshold::binary_threshold(sc_module_name name) : sc_module(name), mVcdFile(0) {
    binary_threshold_AXILiteS_s_axi_U = new binary_threshold_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("binary_threshold_AXILiteS_s_axi_U");
    binary_threshold_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    binary_threshold_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    binary_threshold_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    binary_threshold_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    binary_threshold_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    binary_threshold_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    binary_threshold_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    binary_threshold_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    binary_threshold_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    binary_threshold_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    binary_threshold_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    binary_threshold_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    binary_threshold_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    binary_threshold_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    binary_threshold_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    binary_threshold_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    binary_threshold_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    binary_threshold_AXILiteS_s_axi_U->ACLK(ap_clk);
    binary_threshold_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    binary_threshold_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    binary_threshold_AXILiteS_s_axi_U->length_V(length_V);
    binary_threshold_AXILiteS_s_axi_U->threshold_V(threshold_V);
    binary_threshold_AXILiteS_s_axi_U->max_val_V(max_val_V);
    regslice_both_input_image_data_V_U = new regslice_both<32>("regslice_both_input_image_data_V_U");
    regslice_both_input_image_data_V_U->ap_clk(ap_clk);
    regslice_both_input_image_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_data_V_U->data_in(input_image_TDATA);
    regslice_both_input_image_data_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_data_V_U->ack_in(regslice_both_input_image_data_V_U_ack_in);
    regslice_both_input_image_data_V_U->data_out(input_image_TDATA_int);
    regslice_both_input_image_data_V_U->vld_out(input_image_TVALID_int);
    regslice_both_input_image_data_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_data_V_U->apdone_blk(regslice_both_input_image_data_V_U_apdone_blk);
    regslice_both_input_image_keep_V_U = new regslice_both<4>("regslice_both_input_image_keep_V_U");
    regslice_both_input_image_keep_V_U->ap_clk(ap_clk);
    regslice_both_input_image_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_keep_V_U->data_in(input_image_TKEEP);
    regslice_both_input_image_keep_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_keep_V_U->ack_in(regslice_both_input_image_keep_V_U_ack_in);
    regslice_both_input_image_keep_V_U->data_out(input_image_TKEEP_int);
    regslice_both_input_image_keep_V_U->vld_out(regslice_both_input_image_keep_V_U_vld_out);
    regslice_both_input_image_keep_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_keep_V_U->apdone_blk(regslice_both_input_image_keep_V_U_apdone_blk);
    regslice_both_input_image_strb_V_U = new regslice_both<4>("regslice_both_input_image_strb_V_U");
    regslice_both_input_image_strb_V_U->ap_clk(ap_clk);
    regslice_both_input_image_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_strb_V_U->data_in(input_image_TSTRB);
    regslice_both_input_image_strb_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_strb_V_U->ack_in(regslice_both_input_image_strb_V_U_ack_in);
    regslice_both_input_image_strb_V_U->data_out(input_image_TSTRB_int);
    regslice_both_input_image_strb_V_U->vld_out(regslice_both_input_image_strb_V_U_vld_out);
    regslice_both_input_image_strb_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_strb_V_U->apdone_blk(regslice_both_input_image_strb_V_U_apdone_blk);
    regslice_both_input_image_user_V_U = new regslice_both<2>("regslice_both_input_image_user_V_U");
    regslice_both_input_image_user_V_U->ap_clk(ap_clk);
    regslice_both_input_image_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_user_V_U->data_in(input_image_TUSER);
    regslice_both_input_image_user_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_user_V_U->ack_in(regslice_both_input_image_user_V_U_ack_in);
    regslice_both_input_image_user_V_U->data_out(input_image_TUSER_int);
    regslice_both_input_image_user_V_U->vld_out(regslice_both_input_image_user_V_U_vld_out);
    regslice_both_input_image_user_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_user_V_U->apdone_blk(regslice_both_input_image_user_V_U_apdone_blk);
    regslice_both_input_image_last_V_U = new regslice_both<1>("regslice_both_input_image_last_V_U");
    regslice_both_input_image_last_V_U->ap_clk(ap_clk);
    regslice_both_input_image_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_last_V_U->data_in(input_image_TLAST);
    regslice_both_input_image_last_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_last_V_U->ack_in(regslice_both_input_image_last_V_U_ack_in);
    regslice_both_input_image_last_V_U->data_out(input_image_TLAST_int);
    regslice_both_input_image_last_V_U->vld_out(regslice_both_input_image_last_V_U_vld_out);
    regslice_both_input_image_last_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_last_V_U->apdone_blk(regslice_both_input_image_last_V_U_apdone_blk);
    regslice_both_input_image_id_V_U = new regslice_both<5>("regslice_both_input_image_id_V_U");
    regslice_both_input_image_id_V_U->ap_clk(ap_clk);
    regslice_both_input_image_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_id_V_U->data_in(input_image_TID);
    regslice_both_input_image_id_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_id_V_U->ack_in(regslice_both_input_image_id_V_U_ack_in);
    regslice_both_input_image_id_V_U->data_out(input_image_TID_int);
    regslice_both_input_image_id_V_U->vld_out(regslice_both_input_image_id_V_U_vld_out);
    regslice_both_input_image_id_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_id_V_U->apdone_blk(regslice_both_input_image_id_V_U_apdone_blk);
    regslice_both_input_image_dest_V_U = new regslice_both<6>("regslice_both_input_image_dest_V_U");
    regslice_both_input_image_dest_V_U->ap_clk(ap_clk);
    regslice_both_input_image_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_input_image_dest_V_U->data_in(input_image_TDEST);
    regslice_both_input_image_dest_V_U->vld_in(input_image_TVALID);
    regslice_both_input_image_dest_V_U->ack_in(regslice_both_input_image_dest_V_U_ack_in);
    regslice_both_input_image_dest_V_U->data_out(input_image_TDEST_int);
    regslice_both_input_image_dest_V_U->vld_out(regslice_both_input_image_dest_V_U_vld_out);
    regslice_both_input_image_dest_V_U->ack_out(input_image_TREADY_int);
    regslice_both_input_image_dest_V_U->apdone_blk(regslice_both_input_image_dest_V_U_apdone_blk);
    regslice_both_output_image_data_V_U = new regslice_both<32>("regslice_both_output_image_data_V_U");
    regslice_both_output_image_data_V_U->ap_clk(ap_clk);
    regslice_both_output_image_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_data_V_U->data_in(output_image_TDATA_int);
    regslice_both_output_image_data_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_data_V_U->ack_in(output_image_TREADY_int);
    regslice_both_output_image_data_V_U->data_out(output_image_TDATA);
    regslice_both_output_image_data_V_U->vld_out(regslice_both_output_image_data_V_U_vld_out);
    regslice_both_output_image_data_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_data_V_U->apdone_blk(regslice_both_output_image_data_V_U_apdone_blk);
    regslice_both_output_image_keep_V_U = new regslice_both<4>("regslice_both_output_image_keep_V_U");
    regslice_both_output_image_keep_V_U->ap_clk(ap_clk);
    regslice_both_output_image_keep_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_keep_V_U->data_in(input_image_keep_V_t_reg_229);
    regslice_both_output_image_keep_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_keep_V_U->ack_in(regslice_both_output_image_keep_V_U_ack_in_dummy);
    regslice_both_output_image_keep_V_U->data_out(output_image_TKEEP);
    regslice_both_output_image_keep_V_U->vld_out(regslice_both_output_image_keep_V_U_vld_out);
    regslice_both_output_image_keep_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_keep_V_U->apdone_blk(regslice_both_output_image_keep_V_U_apdone_blk);
    regslice_both_output_image_strb_V_U = new regslice_both<4>("regslice_both_output_image_strb_V_U");
    regslice_both_output_image_strb_V_U->ap_clk(ap_clk);
    regslice_both_output_image_strb_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_strb_V_U->data_in(input_image_strb_V_t_reg_234);
    regslice_both_output_image_strb_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_strb_V_U->ack_in(regslice_both_output_image_strb_V_U_ack_in_dummy);
    regslice_both_output_image_strb_V_U->data_out(output_image_TSTRB);
    regslice_both_output_image_strb_V_U->vld_out(regslice_both_output_image_strb_V_U_vld_out);
    regslice_both_output_image_strb_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_strb_V_U->apdone_blk(regslice_both_output_image_strb_V_U_apdone_blk);
    regslice_both_output_image_user_V_U = new regslice_both<2>("regslice_both_output_image_user_V_U");
    regslice_both_output_image_user_V_U->ap_clk(ap_clk);
    regslice_both_output_image_user_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_user_V_U->data_in(input_image_user_V_t_reg_239);
    regslice_both_output_image_user_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_user_V_U->ack_in(regslice_both_output_image_user_V_U_ack_in_dummy);
    regslice_both_output_image_user_V_U->data_out(output_image_TUSER);
    regslice_both_output_image_user_V_U->vld_out(regslice_both_output_image_user_V_U_vld_out);
    regslice_both_output_image_user_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_user_V_U->apdone_blk(regslice_both_output_image_user_V_U_apdone_blk);
    regslice_both_output_image_last_V_U = new regslice_both<1>("regslice_both_output_image_last_V_U");
    regslice_both_output_image_last_V_U->ap_clk(ap_clk);
    regslice_both_output_image_last_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_last_V_U->data_in(input_image_last_V_t_reg_244);
    regslice_both_output_image_last_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_last_V_U->ack_in(regslice_both_output_image_last_V_U_ack_in_dummy);
    regslice_both_output_image_last_V_U->data_out(output_image_TLAST);
    regslice_both_output_image_last_V_U->vld_out(regslice_both_output_image_last_V_U_vld_out);
    regslice_both_output_image_last_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_last_V_U->apdone_blk(regslice_both_output_image_last_V_U_apdone_blk);
    regslice_both_output_image_id_V_U = new regslice_both<5>("regslice_both_output_image_id_V_U");
    regslice_both_output_image_id_V_U->ap_clk(ap_clk);
    regslice_both_output_image_id_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_id_V_U->data_in(input_image_id_V_tmp_reg_249);
    regslice_both_output_image_id_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_id_V_U->ack_in(regslice_both_output_image_id_V_U_ack_in_dummy);
    regslice_both_output_image_id_V_U->data_out(output_image_TID);
    regslice_both_output_image_id_V_U->vld_out(regslice_both_output_image_id_V_U_vld_out);
    regslice_both_output_image_id_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_id_V_U->apdone_blk(regslice_both_output_image_id_V_U_apdone_blk);
    regslice_both_output_image_dest_V_U = new regslice_both<6>("regslice_both_output_image_dest_V_U");
    regslice_both_output_image_dest_V_U->ap_clk(ap_clk);
    regslice_both_output_image_dest_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_output_image_dest_V_U->data_in(input_image_dest_V_t_reg_254);
    regslice_both_output_image_dest_V_U->vld_in(output_image_TVALID_int);
    regslice_both_output_image_dest_V_U->ack_in(regslice_both_output_image_dest_V_U_ack_in_dummy);
    regslice_both_output_image_dest_V_U->data_out(output_image_TDEST);
    regslice_both_output_image_dest_V_U->vld_out(regslice_both_output_image_dest_V_U_vld_out);
    regslice_both_output_image_dest_V_U->ack_out(output_image_TREADY);
    regslice_both_output_image_dest_V_U->apdone_blk(regslice_both_output_image_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( input_image_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );
    sensitive << ( input_image_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_state4_io );
    sensitive << ( ap_block_state5_io );
    sensitive << ( input_image_TVALID_int );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( input_image_TVALID_int );

    SC_METHOD(thread_ap_block_state4_io);
    sensitive << ( icmp_ln46_reg_220 );
    sensitive << ( output_image_TREADY_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( icmp_ln46_reg_220_pp0_iter1_reg );
    sensitive << ( output_image_TREADY_int );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln46_fu_150_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_i_fu_155_p2);
    sensitive << ( i_op_assign_reg_133 );

    SC_METHOD(thread_icmp_ln46_fu_150_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_op_assign_reg_133 );
    sensitive << ( length_V_read_reg_211 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln895_1_fu_189_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( threshold_V_read_reg_206 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( input_image_TDATA_int );

    SC_METHOD(thread_icmp_ln895_fu_144_p2);
    sensitive << ( threshold_V_0_data_reg );
    sensitive << ( max_val_V_0_data_reg );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_input_image_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( input_image_TVALID_int );

    SC_METHOD(thread_input_image_TREADY);
    sensitive << ( input_image_TVALID );
    sensitive << ( regslice_both_input_image_data_V_U_ack_in );

    SC_METHOD(thread_input_image_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_length_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_output_image_data_V_U_apdone_blk );

    SC_METHOD(thread_max_val_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_output_image_data_V_U_apdone_blk );

    SC_METHOD(thread_output_image_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln46_reg_220 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln46_reg_220_pp0_iter1_reg );
    sensitive << ( output_image_TREADY_int );

    SC_METHOD(thread_output_image_TDATA_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln46_reg_220 );
    sensitive << ( max_val_V_read_reg_201 );
    sensitive << ( icmp_ln895_1_reg_259 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_output_image_TVALID);
    sensitive << ( regslice_both_output_image_data_V_U_vld_out );

    SC_METHOD(thread_output_image_TVALID_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln46_reg_220 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_threshold_V_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_output_image_data_V_U_apdone_blk );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln46_fu_150_p2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln895_fu_144_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( regslice_both_output_image_data_V_U_apdone_blk );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    length_V_0_data_reg = "00000000000000000000000000000000";
    length_V_0_vld_reg = SC_LOGIC_0;
    threshold_V_0_data_reg = "00000000000000000000000000000000";
    threshold_V_0_vld_reg = SC_LOGIC_0;
    max_val_V_0_data_reg = "00000000000000000000000000000000";
    max_val_V_0_vld_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "binary_threshold_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_image_TDATA, "(port)input_image_TDATA");
    sc_trace(mVcdFile, input_image_TVALID, "(port)input_image_TVALID");
    sc_trace(mVcdFile, input_image_TREADY, "(port)input_image_TREADY");
    sc_trace(mVcdFile, input_image_TKEEP, "(port)input_image_TKEEP");
    sc_trace(mVcdFile, input_image_TSTRB, "(port)input_image_TSTRB");
    sc_trace(mVcdFile, input_image_TUSER, "(port)input_image_TUSER");
    sc_trace(mVcdFile, input_image_TLAST, "(port)input_image_TLAST");
    sc_trace(mVcdFile, input_image_TID, "(port)input_image_TID");
    sc_trace(mVcdFile, input_image_TDEST, "(port)input_image_TDEST");
    sc_trace(mVcdFile, output_image_TDATA, "(port)output_image_TDATA");
    sc_trace(mVcdFile, output_image_TVALID, "(port)output_image_TVALID");
    sc_trace(mVcdFile, output_image_TREADY, "(port)output_image_TREADY");
    sc_trace(mVcdFile, output_image_TKEEP, "(port)output_image_TKEEP");
    sc_trace(mVcdFile, output_image_TSTRB, "(port)output_image_TSTRB");
    sc_trace(mVcdFile, output_image_TUSER, "(port)output_image_TUSER");
    sc_trace(mVcdFile, output_image_TLAST, "(port)output_image_TLAST");
    sc_trace(mVcdFile, output_image_TID, "(port)output_image_TID");
    sc_trace(mVcdFile, output_image_TDEST, "(port)output_image_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, length_V, "length_V");
    sc_trace(mVcdFile, length_V_0_data_reg, "length_V_0_data_reg");
    sc_trace(mVcdFile, length_V_0_vld_reg, "length_V_0_vld_reg");
    sc_trace(mVcdFile, length_V_0_ack_out, "length_V_0_ack_out");
    sc_trace(mVcdFile, threshold_V, "threshold_V");
    sc_trace(mVcdFile, threshold_V_0_data_reg, "threshold_V_0_data_reg");
    sc_trace(mVcdFile, threshold_V_0_vld_reg, "threshold_V_0_vld_reg");
    sc_trace(mVcdFile, threshold_V_0_ack_out, "threshold_V_0_ack_out");
    sc_trace(mVcdFile, max_val_V, "max_val_V");
    sc_trace(mVcdFile, max_val_V_0_data_reg, "max_val_V_0_data_reg");
    sc_trace(mVcdFile, max_val_V_0_vld_reg, "max_val_V_0_vld_reg");
    sc_trace(mVcdFile, max_val_V_0_ack_out, "max_val_V_0_ack_out");
    sc_trace(mVcdFile, input_image_TDATA_blk_n, "input_image_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln46_fu_150_p2, "icmp_ln46_fu_150_p2");
    sc_trace(mVcdFile, output_image_TDATA_blk_n, "output_image_TDATA_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, icmp_ln46_reg_220, "icmp_ln46_reg_220");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, icmp_ln46_reg_220_pp0_iter1_reg, "icmp_ln46_reg_220_pp0_iter1_reg");
    sc_trace(mVcdFile, i_op_assign_reg_133, "i_op_assign_reg_133");
    sc_trace(mVcdFile, max_val_V_read_reg_201, "max_val_V_read_reg_201");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, threshold_V_read_reg_206, "threshold_V_read_reg_206");
    sc_trace(mVcdFile, length_V_read_reg_211, "length_V_read_reg_211");
    sc_trace(mVcdFile, icmp_ln895_fu_144_p2, "icmp_ln895_fu_144_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_io, "ap_block_state4_io");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_155_p2, "i_fu_155_p2");
    sc_trace(mVcdFile, input_image_keep_V_t_reg_229, "input_image_keep_V_t_reg_229");
    sc_trace(mVcdFile, input_image_strb_V_t_reg_234, "input_image_strb_V_t_reg_234");
    sc_trace(mVcdFile, input_image_user_V_t_reg_239, "input_image_user_V_t_reg_239");
    sc_trace(mVcdFile, input_image_last_V_t_reg_244, "input_image_last_V_t_reg_244");
    sc_trace(mVcdFile, input_image_id_V_tmp_reg_249, "input_image_id_V_tmp_reg_249");
    sc_trace(mVcdFile, input_image_dest_V_t_reg_254, "input_image_dest_V_t_reg_254");
    sc_trace(mVcdFile, icmp_ln895_1_fu_189_p2, "icmp_ln895_1_fu_189_p2");
    sc_trace(mVcdFile, icmp_ln895_1_reg_259, "icmp_ln895_1_reg_259");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, regslice_both_output_image_data_V_U_apdone_blk, "regslice_both_output_image_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, regslice_both_input_image_data_V_U_apdone_blk, "regslice_both_input_image_data_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TDATA_int, "input_image_TDATA_int");
    sc_trace(mVcdFile, input_image_TVALID_int, "input_image_TVALID_int");
    sc_trace(mVcdFile, input_image_TREADY_int, "input_image_TREADY_int");
    sc_trace(mVcdFile, regslice_both_input_image_data_V_U_ack_in, "regslice_both_input_image_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_input_image_keep_V_U_apdone_blk, "regslice_both_input_image_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TKEEP_int, "input_image_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_input_image_keep_V_U_vld_out, "regslice_both_input_image_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_input_image_keep_V_U_ack_in, "regslice_both_input_image_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_input_image_strb_V_U_apdone_blk, "regslice_both_input_image_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TSTRB_int, "input_image_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_input_image_strb_V_U_vld_out, "regslice_both_input_image_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_input_image_strb_V_U_ack_in, "regslice_both_input_image_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_input_image_user_V_U_apdone_blk, "regslice_both_input_image_user_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TUSER_int, "input_image_TUSER_int");
    sc_trace(mVcdFile, regslice_both_input_image_user_V_U_vld_out, "regslice_both_input_image_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_input_image_user_V_U_ack_in, "regslice_both_input_image_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_input_image_last_V_U_apdone_blk, "regslice_both_input_image_last_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TLAST_int, "input_image_TLAST_int");
    sc_trace(mVcdFile, regslice_both_input_image_last_V_U_vld_out, "regslice_both_input_image_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_input_image_last_V_U_ack_in, "regslice_both_input_image_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_input_image_id_V_U_apdone_blk, "regslice_both_input_image_id_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TID_int, "input_image_TID_int");
    sc_trace(mVcdFile, regslice_both_input_image_id_V_U_vld_out, "regslice_both_input_image_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_input_image_id_V_U_ack_in, "regslice_both_input_image_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_input_image_dest_V_U_apdone_blk, "regslice_both_input_image_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, input_image_TDEST_int, "input_image_TDEST_int");
    sc_trace(mVcdFile, regslice_both_input_image_dest_V_U_vld_out, "regslice_both_input_image_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_input_image_dest_V_U_ack_in, "regslice_both_input_image_dest_V_U_ack_in");
    sc_trace(mVcdFile, output_image_TDATA_int, "output_image_TDATA_int");
    sc_trace(mVcdFile, output_image_TVALID_int, "output_image_TVALID_int");
    sc_trace(mVcdFile, output_image_TREADY_int, "output_image_TREADY_int");
    sc_trace(mVcdFile, regslice_both_output_image_data_V_U_vld_out, "regslice_both_output_image_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_output_image_keep_V_U_apdone_blk, "regslice_both_output_image_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_output_image_keep_V_U_ack_in_dummy, "regslice_both_output_image_keep_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_output_image_keep_V_U_vld_out, "regslice_both_output_image_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_output_image_strb_V_U_apdone_blk, "regslice_both_output_image_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_output_image_strb_V_U_ack_in_dummy, "regslice_both_output_image_strb_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_output_image_strb_V_U_vld_out, "regslice_both_output_image_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_output_image_user_V_U_apdone_blk, "regslice_both_output_image_user_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_output_image_user_V_U_ack_in_dummy, "regslice_both_output_image_user_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_output_image_user_V_U_vld_out, "regslice_both_output_image_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_output_image_last_V_U_apdone_blk, "regslice_both_output_image_last_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_output_image_last_V_U_ack_in_dummy, "regslice_both_output_image_last_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_output_image_last_V_U_vld_out, "regslice_both_output_image_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_output_image_id_V_U_apdone_blk, "regslice_both_output_image_id_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_output_image_id_V_U_ack_in_dummy, "regslice_both_output_image_id_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_output_image_id_V_U_vld_out, "regslice_both_output_image_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_output_image_dest_V_U_apdone_blk, "regslice_both_output_image_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, regslice_both_output_image_dest_V_U_ack_in_dummy, "regslice_both_output_image_dest_V_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_output_image_dest_V_U_vld_out, "regslice_both_output_image_dest_V_U_vld_out");
#endif

    }
    mHdltvinHandle.open("binary_threshold.hdltvin.dat");
    mHdltvoutHandle.open("binary_threshold.hdltvout.dat");
}

binary_threshold::~binary_threshold() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete binary_threshold_AXILiteS_s_axi_U;
    delete regslice_both_input_image_data_V_U;
    delete regslice_both_input_image_keep_V_U;
    delete regslice_both_input_image_strb_V_U;
    delete regslice_both_input_image_user_V_U;
    delete regslice_both_input_image_last_V_U;
    delete regslice_both_input_image_id_V_U;
    delete regslice_both_input_image_dest_V_U;
    delete regslice_both_output_image_data_V_U;
    delete regslice_both_output_image_keep_V_U;
    delete regslice_both_output_image_strb_V_U;
    delete regslice_both_output_image_user_V_U;
    delete regslice_both_output_image_last_V_U;
    delete regslice_both_output_image_id_V_U;
    delete regslice_both_output_image_dest_V_U;
}

void binary_threshold::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void binary_threshold::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_144_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_144_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_144_p2.read()))) {
        i_op_assign_reg_133 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_op_assign_reg_133 = i_fu_155_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln46_reg_220 = icmp_ln46_fu_150_p2.read();
        icmp_ln46_reg_220_pp0_iter1_reg = icmp_ln46_reg_220.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln895_1_reg_259 = icmp_ln895_1_fu_189_p2.read();
        input_image_dest_V_t_reg_254 = input_image_TDEST_int.read();
        input_image_id_V_tmp_reg_249 = input_image_TID_int.read();
        input_image_keep_V_t_reg_229 = input_image_TKEEP_int.read();
        input_image_last_V_t_reg_244 = input_image_TLAST_int.read();
        input_image_strb_V_t_reg_234 = input_image_TSTRB_int.read();
        input_image_user_V_t_reg_239 = input_image_TUSER_int.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, length_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, length_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, length_V_0_ack_out.read())))) {
        length_V_0_data_reg = length_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        length_V_read_reg_211 = length_V_0_data_reg.read();
        max_val_V_read_reg_201 = max_val_V_0_data_reg.read();
        threshold_V_read_reg_206 = threshold_V_0_data_reg.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, max_val_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, max_val_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, max_val_V_0_ack_out.read())))) {
        max_val_V_0_data_reg = max_val_V.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, threshold_V_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, threshold_V_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, threshold_V_0_ack_out.read())))) {
        threshold_V_0_data_reg = threshold_V.read();
    }
}

void binary_threshold::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void binary_threshold::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void binary_threshold::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void binary_threshold::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void binary_threshold::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_image_TVALID_int.read()));
}

void binary_threshold::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_image_TVALID_int.read())));
}

void binary_threshold::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state4_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, input_image_TVALID_int.read())));
}

void binary_threshold::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, input_image_TVALID_int.read()));
}

void binary_threshold::thread_ap_block_state4_io() {
    ap_block_state4_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_reg_220.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_image_TREADY_int.read()));
}

void binary_threshold::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void binary_threshold::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_reg_220_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_image_TREADY_int.read()));
}

void binary_threshold::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void binary_threshold::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void binary_threshold::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void binary_threshold::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void binary_threshold::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void binary_threshold::thread_i_fu_155_p2() {
    i_fu_155_p2 = (!i_op_assign_reg_133.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i_op_assign_reg_133.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void binary_threshold::thread_icmp_ln46_fu_150_p2() {
    icmp_ln46_fu_150_p2 = (!i_op_assign_reg_133.read().is_01() || !length_V_read_reg_211.read().is_01())? sc_lv<1>(): sc_lv<1>(i_op_assign_reg_133.read() == length_V_read_reg_211.read());
}

void binary_threshold::thread_icmp_ln895_1_fu_189_p2() {
    icmp_ln895_1_fu_189_p2 = (!input_image_TDATA_int.read().is_01() || !threshold_V_read_reg_206.read().is_01())? sc_lv<1>(): (sc_biguint<32>(input_image_TDATA_int.read()) > sc_biguint<32>(threshold_V_read_reg_206.read()));
}

void binary_threshold::thread_icmp_ln895_fu_144_p2() {
    icmp_ln895_fu_144_p2 = (!threshold_V_0_data_reg.read().is_01() || !max_val_V_0_data_reg.read().is_01())? sc_lv<1>(): (sc_biguint<32>(threshold_V_0_data_reg.read()) > sc_biguint<32>(max_val_V_0_data_reg.read()));
}

void binary_threshold::thread_input_image_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0))) {
        input_image_TDATA_blk_n = input_image_TVALID_int.read();
    } else {
        input_image_TDATA_blk_n = ap_const_logic_1;
    }
}

void binary_threshold::thread_input_image_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, input_image_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_input_image_data_V_U_ack_in.read()))) {
        input_image_TREADY = ap_const_logic_1;
    } else {
        input_image_TREADY = ap_const_logic_0;
    }
}

void binary_threshold::thread_input_image_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        input_image_TREADY_int = ap_const_logic_1;
    } else {
        input_image_TREADY_int = ap_const_logic_0;
    }
}

void binary_threshold::thread_length_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(regslice_both_output_image_data_V_U_apdone_blk.read(), ap_const_logic_0)))) {
        length_V_0_ack_out = ap_const_logic_1;
    } else {
        length_V_0_ack_out = ap_const_logic_0;
    }
}

void binary_threshold::thread_max_val_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(regslice_both_output_image_data_V_U_apdone_blk.read(), ap_const_logic_0)))) {
        max_val_V_0_ack_out = ap_const_logic_1;
    } else {
        max_val_V_0_ack_out = ap_const_logic_0;
    }
}

void binary_threshold::thread_output_image_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_reg_220.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_reg_220_pp0_iter1_reg.read())))) {
        output_image_TDATA_blk_n = output_image_TREADY_int.read();
    } else {
        output_image_TDATA_blk_n = ap_const_logic_1;
    }
}

void binary_threshold::thread_output_image_TDATA_int() {
    output_image_TDATA_int = (!icmp_ln895_1_reg_259.read()[0].is_01())? sc_lv<32>(): ((icmp_ln895_1_reg_259.read()[0].to_bool())? max_val_V_read_reg_201.read(): ap_const_lv32_0);
}

void binary_threshold::thread_output_image_TVALID() {
    output_image_TVALID = regslice_both_output_image_data_V_U_vld_out.read();
}

void binary_threshold::thread_output_image_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_reg_220.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        output_image_TVALID_int = ap_const_logic_1;
    } else {
        output_image_TVALID_int = ap_const_logic_0;
    }
}

void binary_threshold::thread_threshold_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(regslice_both_output_image_data_V_U_apdone_blk.read(), ap_const_logic_0)))) {
        threshold_V_0_ack_out = ap_const_logic_1;
    } else {
        threshold_V_0_ack_out = ap_const_logic_0;
    }
}

void binary_threshold::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln895_fu_144_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln46_fu_150_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(regslice_both_output_image_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void binary_threshold::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TDATA\" :  \"" << input_image_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TVALID\" :  \"" << input_image_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_image_TREADY\" :  \"" << input_image_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TKEEP\" :  \"" << input_image_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TSTRB\" :  \"" << input_image_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TUSER\" :  \"" << input_image_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TLAST\" :  \"" << input_image_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TID\" :  \"" << input_image_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_image_TDEST\" :  \"" << input_image_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TDATA\" :  \"" << output_image_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TVALID\" :  \"" << output_image_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_image_TREADY\" :  \"" << output_image_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TKEEP\" :  \"" << output_image_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TSTRB\" :  \"" << output_image_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TUSER\" :  \"" << output_image_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TLAST\" :  \"" << output_image_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TID\" :  \"" << output_image_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_image_TDEST\" :  \"" << output_image_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}




================================================================
== Vivado HLS Report for 'binary_threshold'
================================================================
* Date:           Sun Jul  4 18:25:18 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        project_1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 4.451 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |        ?|        ?|         3|          1|          1|     ?|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 6 3 
3 --> 6 4 
4 --> 5 
5 --> 3 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 7 [2/2] (1.00ns)   --->   "%max_val_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_val_V)"   --->   Operation 7 'read' 'max_val_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 8 [2/2] (1.00ns)   --->   "%threshold_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %threshold_V)"   --->   Operation 8 'read' 'threshold_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 9 [2/2] (1.00ns)   --->   "%length_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %length_V)"   --->   Operation 9 'read' 'length_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 2 <SV = 1> <Delay = 4.45>
ST_2 : Operation 10 [1/2] (1.00ns)   --->   "%max_val_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %max_val_V)"   --->   Operation 10 'read' 'max_val_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 11 [1/2] (1.00ns)   --->   "%threshold_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %threshold_V)"   --->   Operation 11 'read' 'threshold_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 12 [1/2] (1.00ns)   --->   "%length_V_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %length_V)"   --->   Operation 12 'read' 'length_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %input_image_data_V), !map !46"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %input_image_keep_V), !map !52"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %input_image_strb_V), !map !56"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %input_image_user_V), !map !60"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %input_image_last_V), !map !64"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i5* %input_image_id_V), !map !68"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %input_image_dest_V), !map !72"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %output_image_data_V), !map !76"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %output_image_keep_V), !map !80"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %output_image_strb_V), !map !84"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %output_image_user_V), !map !88"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %output_image_last_V), !map !92"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i5* %output_image_id_V), !map !96"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %output_image_dest_V), !map !100"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %length_V), !map !104"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %threshold_V), !map !110"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %max_val_V), !map !114"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([17 x i8]* @binary_threshold_str) nounwind"   --->   Operation 30 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %input_image_data_V, i4* %input_image_keep_V, i4* %input_image_strb_V, i2* %input_image_user_V, i1* %input_image_last_V, i5* %input_image_id_V, i6* %input_image_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [binary_threshold.cpp:30]   --->   Operation 31 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %output_image_data_V, i4* %output_image_keep_V, i4* %output_image_strb_V, i2* %output_image_user_V, i1* %output_image_last_V, i5* %output_image_id_V, i6* %output_image_dest_V, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [binary_threshold.cpp:31]   --->   Operation 32 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %threshold_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [binary_threshold.cpp:32]   --->   Operation 33 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %max_val_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [binary_threshold.cpp:33]   --->   Operation 34 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %length_V, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [binary_threshold.cpp:34]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [binary_threshold.cpp:35]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (2.47ns)   --->   "%icmp_ln895 = icmp ugt i32 %threshold_V_read, %max_val_V_read" [binary_threshold.cpp:41]   --->   Operation 37 'icmp' 'icmp_ln895' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895, label %.loopexit, label %.preheader.preheader" [binary_threshold.cpp:41]   --->   Operation 38 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (1.76ns)   --->   "br label %.preheader" [binary_threshold.cpp:46]   --->   Operation 39 'br' <Predicate = (!icmp_ln895)> <Delay = 1.76>

State 3 <SV = 2> <Delay = 3.45>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%i_op_assign = phi i32 [ %i, %hls_label_0 ], [ 0, %.preheader.preheader ]"   --->   Operation 40 'phi' 'i_op_assign' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (2.47ns)   --->   "%icmp_ln46 = icmp eq i32 %i_op_assign, %length_V_read" [binary_threshold.cpp:46]   --->   Operation 41 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (2.55ns)   --->   "%i = add i32 %i_op_assign, 1" [binary_threshold.cpp:46]   --->   Operation 42 'add' 'i' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln46, label %.loopexit.loopexit, label %hls_label_0" [binary_threshold.cpp:46]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%empty = call { i32, i4, i4, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %input_image_data_V, i4* %input_image_keep_V, i4* %input_image_strb_V, i2* %input_image_user_V, i1* %input_image_last_V, i5* %input_image_id_V, i6* %input_image_dest_V)" [binary_threshold.cpp:27]   --->   Operation 44 'read' 'empty' <Predicate = (!icmp_ln46)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln895_1)   --->   "%input_image_data_V_t = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 0" [binary_threshold.cpp:27]   --->   Operation 45 'extractvalue' 'input_image_data_V_t' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%input_image_keep_V_t = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 1" [binary_threshold.cpp:27]   --->   Operation 46 'extractvalue' 'input_image_keep_V_t' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%input_image_strb_V_t = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 2" [binary_threshold.cpp:27]   --->   Operation 47 'extractvalue' 'input_image_strb_V_t' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%input_image_user_V_t = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 3" [binary_threshold.cpp:27]   --->   Operation 48 'extractvalue' 'input_image_user_V_t' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%input_image_last_V_t = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 4" [binary_threshold.cpp:27]   --->   Operation 49 'extractvalue' 'input_image_last_V_t' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%input_image_id_V_tmp = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 5" [binary_threshold.cpp:27]   --->   Operation 50 'extractvalue' 'input_image_id_V_tmp' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%input_image_dest_V_t = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty, 6" [binary_threshold.cpp:27]   --->   Operation 51 'extractvalue' 'input_image_dest_V_t' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (2.47ns) (out node of the LUT)   --->   "%icmp_ln895_1 = icmp ugt i32 %input_image_data_V_t, %threshold_V_read" [binary_threshold.cpp:51]   --->   Operation 52 'icmp' 'icmp_ln895_1' <Predicate = (!icmp_ln46)> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.69>
ST_4 : Operation 53 [1/1] (0.69ns)   --->   "%select_ln51 = select i1 %icmp_ln895_1, i32 %max_val_V_read, i32 0" [binary_threshold.cpp:51]   --->   Operation 53 'select' 'select_ln51' <Predicate = (!icmp_ln46)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %output_image_data_V, i4* %output_image_keep_V, i4* %output_image_strb_V, i2* %output_image_user_V, i1* %output_image_last_V, i5* %output_image_id_V, i6* %output_image_dest_V, i32 %select_ln51, i4 %input_image_keep_V_t, i4 %input_image_strb_V_t, i2 %input_image_user_V_t, i1 %input_image_last_V_t, i5 %input_image_id_V_tmp, i6 %input_image_dest_V_t)" [binary_threshold.cpp:27]   --->   Operation 54 'write' <Predicate = (!icmp_ln46)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [binary_threshold.cpp:46]   --->   Operation 55 'specregionbegin' 'tmp' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [binary_threshold.cpp:49]   --->   Operation 56 'specpipeline' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_5 : Operation 57 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %output_image_data_V, i4* %output_image_keep_V, i4* %output_image_strb_V, i2* %output_image_user_V, i1* %output_image_last_V, i5* %output_image_id_V, i6* %output_image_dest_V, i32 %select_ln51, i4 %input_image_keep_V_t, i4 %input_image_strb_V_t, i2 %input_image_user_V_t, i1 %input_image_last_V_t, i5 %input_image_id_V_tmp, i6 %input_image_dest_V_t)" [binary_threshold.cpp:27]   --->   Operation 57 'write' <Predicate = (!icmp_ln46)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_5 : Operation 58 [1/1] (0.00ns)   --->   "%empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp)" [binary_threshold.cpp:72]   --->   Operation 58 'specregionend' 'empty_2' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "br label %.preheader" [binary_threshold.cpp:46]   --->   Operation 59 'br' <Predicate = (!icmp_ln46)> <Delay = 0.00>

State 6 <SV = 3> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 60 'br' <Predicate = (!icmp_ln895)> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "ret void" [binary_threshold.cpp:73]   --->   Operation 61 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'max_val_V' [18]  (1 ns)

 <State 2>: 4.45ns
The critical path consists of the following:
	s_axi read on port 'max_val_V' [18]  (1 ns)
	'icmp' operation ('icmp_ln895', binary_threshold.cpp:41) [45]  (2.47 ns)
	blocking operation 0.978 ns on control path)

 <State 3>: 3.45ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln46', binary_threshold.cpp:46) [51]  (2.47 ns)
	blocking operation 0.978 ns on control path)

 <State 4>: 0.698ns
The critical path consists of the following:
	'select' operation ('val', binary_threshold.cpp:51) [66]  (0.698 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
